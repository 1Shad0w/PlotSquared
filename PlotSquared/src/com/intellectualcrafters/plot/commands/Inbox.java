/*
 * Copyright (c) IntellectualCrafters - 2014. You are not allowed to distribute
 * and/or monetize any of our intellectual property. IntellectualCrafters is not
 * affiliated with Mojang AB. Minecraft is a trademark of Mojang AB.
 * 
 * >> File = Clear.java >> Generated by: Citymonstret at 2014-08-09 01:41
 */

package com.intellectualcrafters.plot.commands;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import com.intellectualcrafters.plot.*;

import org.apache.commons.lang.StringUtils;
import org.bukkit.entity.Player;

/**
 * Created by Citymonstret on 2014-08-01.
 */
public class Inbox extends SubCommand {

	public Inbox() {
		super(Command.INBOX, "Comment on a plot", "comment", CommandCategory.ACTIONS, true);
	}

	@Override
	public boolean execute(Player plr, String... args) {
		if (!PlayerFunctions.isInPlot(plr)) {
			PlayerFunctions.sendMessage(plr, C.NOT_IN_PLOT);
			return false;
		}
		Plot plot = PlayerFunctions.getCurrentPlot(plr);
		if (!plot.hasOwner()) {
		    PlayerFunctions.sendMessage(plr, C.NOT_IN_PLOT);
            return false;
		}
		
		Integer tier = null;
		UUID uuid = plr.getUniqueId();
		if (PlotMain.hasPermission(plr, "plots.admin")) {
		    tier = 0;
		}
		else if (plot.owner == uuid) {
		    tier = 1;
		}
		else if (plot.helpers.contains(uuid)) {
            tier = 2;
        }
		else if (plot.trusted.contains(uuid)) {
            tier = 3;
        }
		else {
		    tier = 4;
		}
		ArrayList<PlotComment> comments = plot.settings.getComments();
		List<String> recipients = Arrays.asList(new String[] {"admin", "owner", "helper", "trusted", "everyone" });
		
		int counter = 0;
		StringBuilder message = new StringBuilder();
		String prefix = "";
		for (PlotComment comment : comments) {
		    if (comment.tier>=tier) {
		        message.append(prefix + "&6[&c" + recipients.get(tier) + "&6] &7"+comment.senderName+"&f: "+comment.comment);
		        prefix = "\n";
		    }
		}
		if (counter==0) {
		    PlayerFunctions.sendMessage(plr, "&cNo messages.");
		    return false;
		}
		PlayerFunctions.sendMessage(plr, message.toString());
        return true;
	}
}
