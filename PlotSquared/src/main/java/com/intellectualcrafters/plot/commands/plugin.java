/*
 * Copyright (c) IntellectualCrafters - 2014. You are not allowed to distribute
 * and/or monetize any of our intellectual property. IntellectualCrafters is not
 * affiliated with Mojang AB. Minecraft is a trademark of Mojang AB.
 *
 * >> File = plugin.java >> Generated by: Citymonstret at 2014-08-09 01:42
 */

package com.intellectualcrafters.plot.commands;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;

import org.bukkit.Bukkit;
import org.bukkit.entity.Player;
import org.bukkit.plugin.java.JavaPlugin;

import com.intellectualcrafters.plot.PlayerFunctions;
import com.intellectualcrafters.plot.PlotMain;

public class plugin extends SubCommand {

    public plugin() {
        super("plugin", "plots.use", "Show plugin information", "plugin", "pl", CommandCategory.INFO, false);
    }

    public static String downloads, version;

    public static void setup(final JavaPlugin plugin) {
        plugin.getServer().getScheduler().runTaskLaterAsynchronously(plugin, new Runnable() {
            @Override
            public void run() {
                try {
                    downloads = convertToNumericString(getInfo("https://intellectualsites.com/spigot_api.php?method=downloads&url=http://www.spigotmc.org/resources/plotsquared.1177/"), false);
                }
                catch (final Exception e) {
                    downloads = "unknown";
                }
            }
        }, 1l);
        plugin.getServer().getScheduler().runTaskLaterAsynchronously(plugin, new Runnable() {
            @Override
            public void run() {
                try {
                    version = convertToNumericString(getInfo("https://intellectualsites.com/spigot_api.php?method=version&resource=1177"), true);
                }
                catch (final Exception e) {
                    // Let's just ignore this, most likely error 500...
                    version = "unknown";
                }
            }
        }, 200l);
    }

    @Override
    public boolean execute(final Player plr, final String... args) {
        Bukkit.getScheduler().runTaskAsynchronously(JavaPlugin.getPlugin(PlotMain.class), new Runnable() {
            @Override
            public void run() {
                final ArrayList<String> strings = new ArrayList<String>() {
                    {
                        add(String.format("&c>> &6PlotSquared (Version: %s)", PlotMain.getMain().getDescription().getVersion()));
                        add(String.format("&c>> &6Made by Citymonstret and Empire92"));
                        add(String.format("&c>> &6Download at &lhttp://i-s.link/ps"));
                        add(String.format("&c>> &cNewest Version (Spigot): %s", version));
                        add(String.format("&c>> &cTotal Downloads (Spigot): %s", downloads));
                    }
                };
                for (final String s : strings) {
                    PlayerFunctions.sendMessage(plr, s);
                }
            }
        });
        return true;
    }

    private static String convertToNumericString(final String str, final boolean dividers) {
        final StringBuilder builder = new StringBuilder();
        for (final char c : str.toCharArray()) {
            if (Character.isDigit(c)) {
                builder.append(c);
            }
            else if (dividers && ((c == ',') || (c == '.') || (c == '-') || (c == '_'))) {
                builder.append(c);
            }
        }
        return builder.toString();
    }

    /**
     * @param link
     * @return
     */
    private static String getInfo(final String link) throws Exception {
        final URLConnection connection = new URL(link).openConnection();
        connection.addRequestProperty("User-Agent", "Mozilla/4.0");
        final BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
        String document = "", line;
        while ((line = reader.readLine()) != null) {
            document += (line + "\n");
        }
        reader.close();
        return document;
    }

}
