name: Gradle Package

on:
  release:
    types: [created]
  workflow_dispatch: # ðŸ‘ˆ Habilita el botÃ³n de ejecuciÃ³n manual

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: github
        settings-path: ${{ github.workspace }}

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Build with Gradle
      run: ./gradlew build

    # Paso 4: Mover el archivo .jar a la carpeta build/
    - name: Move JAR to build folder
      run: |
        mkdir -p build1  # Crea la carpeta build si no existe
        mv build/libs/*.jar build1/  # Mueve el archivo .jar generado al directorio build/

    # Paso 5: Hacer commit de la carpeta build/ con el archivo .jar
    - name: Commit the JAR file to the repository
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add build1/*.jar
        git commit -m "Add JAR file for release ${{ github.event.release.name }}"
        git push origin ${{ github.ref }}

    # Paso 6: Subir el archivo .jar como Release en GitHub
    - name: Upload JAR to GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: build1/*.jar  # Subir desde la carpeta build/
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Usamos el token de GitHub para la autenticaciÃ³
